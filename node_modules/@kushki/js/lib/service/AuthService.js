"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
exports.__esModule = true;
exports.AuthService = void 0;
var aws_amplify_1 = require("aws-amplify");
var Identifiers_1 = require("./../../lib/constant/Identifiers");
var KushkiError_1 = require("./../../lib/generic/KushkiError");
var CognitoErrorEnum_1 = require("./../../lib/infrastructure/CognitoErrorEnum");
var ErrorEnum_1 = require("./../../lib/infrastructure/ErrorEnum");
var inversify_1 = require("inversify");
var lodash_1 = require("lodash");
require("reflect-metadata");
var rxjs_1 = require("rxjs");
var operators_1 = require("rxjs/operators");
/**
 * Implementation
 */
var AuthService = /** @class */ (function () {
    function AuthService(gateway) {
        this._gateway = gateway;
        AuthService_1._configureAmplifyCredentials();
    }
    AuthService_1 = AuthService;
    AuthService.prototype.requestInitAuth = function (body) {
        var _this = this;
        return rxjs_1.of(1).pipe(operators_1.mergeMap(function () { return _this._validateCurrentSession(body.email); }), operators_1.mergeMap(function (sessionJwt) {
            return rxjs_1.iif(function () { return !sessionJwt; }, _this._handleInitAuth(body.email), rxjs_1.of({ authorization: String(sessionJwt) }));
        }));
    };
    AuthService.prototype.requestVerifyAuth = function (code) {
        var _this = this;
        return rxjs_1.of(1).pipe(operators_1.concatMap(function () {
            return rxjs_1.from(aws_amplify_1.Auth.sendCustomChallengeAnswer(_this._cognitoUser, code));
        }), operators_1.catchError(function () { return rxjs_1.throwError(new KushkiError_1.KushkiError(ErrorEnum_1.ERRORS.E009)); }), operators_1.concatMap(function () { return _this._verifyCurrentSession(); }), operators_1.map(function (session) { return ({
            authorization: session.getRefreshToken().getToken()
        }); }));
    };
    AuthService.prototype._verifyCurrentSession = function () {
        return rxjs_1.of(1).pipe(operators_1.concatMap(function () { return rxjs_1.from(aws_amplify_1.Auth.currentSession()); }), operators_1.catchError(function () { return rxjs_1.throwError(new KushkiError_1.KushkiError(ErrorEnum_1.ERRORS.E008)); }));
    };
    AuthService.prototype._handleInitAuth = function (email) {
        var _this = this;
        var password = AuthService_1._getRandomString();
        return rxjs_1.of(1).pipe(operators_1.mergeMap(function () {
            var user_attributes = {
                "custom:merchant": email,
                given_name: email,
                preferred_username: email
            };
            var params = {
                password: password,
                attributes: user_attributes,
                username: email
            };
            return rxjs_1.from(aws_amplify_1.Auth.signUp(params));
        }), operators_1.concatMap(function () { return _this._userSignIn(email, password); }), operators_1.map(function (cognitoUser) {
            _this._cognitoUser = cognitoUser;
            return {
                authorization: cognitoUser
                    .getSignInUserSession()
                    .getAccessToken()
                    .getJwtToken()
            };
        }), operators_1.catchError(function (error) {
            var error_code = lodash_1.get(error, "code", "");
            return rxjs_1.iif(function () { return error_code === CognitoErrorEnum_1.CognitoErrorEnum.UsernameExistsException; }, _this._userSignInPasswordles(email), rxjs_1.throwError(new KushkiError_1.KushkiError(ErrorEnum_1.ERRORS.E007)));
        }));
    };
    AuthService.prototype._validateCurrentSession = function (email) {
        var _this = this;
        return rxjs_1.of(1).pipe(operators_1.concatMap(function () { return aws_amplify_1.Auth.currentSession(); }), operators_1.concatMap(function (session) {
            return rxjs_1.forkJoin([rxjs_1.of(session), rxjs_1.from(aws_amplify_1.Auth.currentUserInfo())]);
        }), operators_1.concatMap(function (_a) {
            var session = _a[0], current_user_info = _a[1];
            if (email &&
                current_user_info.attributes.email.toLowerCase() !==
                    email.toLowerCase())
                return _this._signOut();
            return rxjs_1.of(session.getAccessToken().getJwtToken());
        }), operators_1.catchError(function () { return _this._signOut(); }));
    };
    AuthService.prototype._signOut = function () {
        return rxjs_1.of(1).pipe(operators_1.concatMap(function () { return aws_amplify_1.Auth.signOut(); }), operators_1.mapTo(false));
    };
    AuthService._configureAmplifyCredentials = function () {
        var auth = {
            cognito: {
                APP_CLIENT_ID: "3dho1m04pofk4c82csf52e40du",
                REGION: "us-east-1",
                USER_POOL_ID: "us-east-1_9FDXFZaVS"
            }
        };
        aws_amplify_1.Auth.configure({
            Auth: {
                mandatorySignId: true,
                region: auth.cognito.REGION,
                userPoolId: auth.cognito.USER_POOL_ID,
                userPoolWebClientId: auth.cognito.APP_CLIENT_ID
            }
        });
    };
    AuthService._getRandomString = function () {
        return (
        // tslint:disable-next-line:insecure-random
        Math.random()
            .toString(36)
            .slice(2) +
            // tslint:disable-next-line:insecure-random
            Math.random()
                .toString(36)
                .toUpperCase()
                .slice(2));
    };
    AuthService.prototype._userSignIn = function (email, password) {
        return rxjs_1.of(1).pipe(operators_1.concatMap(function () { return rxjs_1.from(aws_amplify_1.Auth.signIn(email, password)); }));
    };
    AuthService.prototype._userSignInPasswordles = function (email) {
        var _this = this;
        return rxjs_1.of(1).pipe(operators_1.mergeMap(function () { return rxjs_1.from(aws_amplify_1.Auth.signIn(email)); }), operators_1.mergeMap(function (cognitoUser) {
            _this._cognitoUser = cognitoUser;
            return rxjs_1.throwError(new KushkiError_1.KushkiError(ErrorEnum_1.ERRORS.E010));
        }));
    };
    var AuthService_1;
    AuthService = AuthService_1 = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(Identifiers_1.IDENTIFIERS.KushkiGateway)),
        __metadata("design:paramtypes", [Object])
    ], AuthService);
    return AuthService;
}());
exports.AuthService = AuthService;
